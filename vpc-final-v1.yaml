---
AWSTemplateFormatVersion: 2010-09-09
Description: >
    This template deploys a VPC for CSS  with a pair of public and private subnets spread
    across two Availabilty Zones. It deploys an Internet Gateway, with a default route on the public subnets.
    with Directory Service MicrosoftAD as an Optional
#Metadata: {}
Parameters:
    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String
        Default: LOB-DevOps111

    # S3 Bucket Name, It should be all lowercase
    #VpcCIDR:
    #    Description: Please enter the IP range (CIDR notation) for this VPC
    #    Type: String
    #    Default: 10.115.0.0/23
    #
    #SubnetCIDR:
    #    Description: Please enter the Size of Subnets you would like to create
    #    Type: CommaDelimitedList
    #    Default: "28, 28, 27, 27"

    # Add or Remove Tags in this secions
    TenantTag:
        Description: Enter the Tenant Name
        Type: String
        Default: CSS

    SecurityLevelTag:
        Description: Enter the Value of Secuirty Level ( FedRAMP, HIPAA, Standard, NIST)
        Type: String
        Default: Standard
        AllowedValues:
          - FedRAMP
          - HIPAA
          - NIST
          - Standard

    POCTag:
        Description: Value for the Point of Contact
        Type: String
        Default: Neil Hunt

    CreatorTag:
        Description: Value for the Creator Tag
        Type: String
        Default: Neil Hunt

    CostCenterTag:
        Description: Value for the Cost Center Tags
        Type: String
        Default: "Infrastructure"
    # DS MicrosoftAD
    DomainName:
        Description: FQDN of the domain for this directory
        Type: String
        Default: css.lab

    HasMSAD:
        Description: Create MSAD for DHCP/DNS
        Type: String
        Default: false
        AllowedValues:
          - true
          - false
        ConstraintDescription: Must speicfy true or false

#Mappings: {}
Conditions:
  CreateMSAD: !Equals [ !Ref HasMSAD, true]
  CreateDHCPOption: !Equals [!Ref HasMSAD, true]
  DHCPDNSOptionsAssociation: !Equals [!Ref HasMSAD, true]
#Transform: {}

Resources:
    VPCCIDR:
        Type: Custom::MY_VPC_CIDR_FUNC
        Properties:
          ServiceToken: 'arn:aws:lambda:us-east-1:651773320464:function:CssGetIpAddress'
    # VPC
    VPC:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !GetAtt VPCCIDR.Ip
            EnableDnsHostnames: True
            Tags:
                - Key: Name
                  Value: !Sub VPC-${EnvironmentName}
                - Key: Tenant
                  Value: !Ref TenantTag
                - Key: SecurityLevel
                  Value: !Ref SecurityLevelTag
                - Key: PointOfContact
                  Value: !Ref POCTag
                - Key: Creator
                  Value: !Ref CreatorTag
                - Key: CostCenter
                  Value: !Ref CostCenterTag
    CidrFindr:
      Type: Custom::CidrFindr
      Properties:
        #ServiceToken: !ImportValue CidrFindr
        # US-EAST-1
        ServiceToken: 'arn:aws:lambda:us-east-1:651773320464:function:cidr-findr-Function-105ZI6EX2XHW8'
        # US-EAST-2
        #ServiceToken: 'arn:aws:lambda:us-east-2:651773320464:function:cidr-findr-Function-8RGQJYVTGGH4'

        #VpcId: !Ref VPC
        CIDR: !GetAtt VPCCIDR.Ip  # Refer to the CIDR block
        Sizes: [27, 27, 26, 26]
    # IGW
    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Sub IGW-${EnvironmentName}
                - Key: Tenant
                  Value: !Ref TenantTag
                - Key: SecurityLevel
                  Value: !Ref SecurityLevelTag
                - Key: PointOfContact
                  Value: !Ref POCTag
                - Key: Creator
                  Value: !Ref CreatorTag
                - Key: CostCenter
                  Value: !Ref CostCenterTag

    InternetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref VPC
    # Subnets
    PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs ]
            CidrBlock: !GetAtt CidrFindr.CidrBlock1
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub SN-${EnvironmentName}-PublicSubnet-1
                - Key: Tenant
                  Value: !Ref TenantTag
                - Key: SecurityLevel
                  Value: !Ref SecurityLevelTag
                - Key: PointOfContact
                  Value: !Ref POCTag
                - Key: Creator
                  Value: !Ref CreatorTag
                - Key: CostCenter
                  Value: !Ref CostCenterTag

    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs ]
            CidrBlock: !GetAtt CidrFindr.CidrBlock2
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub SN-${EnvironmentName}-PublicSubnet-2
                - Key: Tenant
                  Value: !Ref TenantTag
                - Key: SecurityLevel
                  Value: !Ref SecurityLevelTag
                - Key: PointOfContact
                  Value: !Ref POCTag
                - Key: Creator
                  Value: !Ref CreatorTag
                - Key: CostCenter
                  Value: !Ref CostCenterTag

    PrivateSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs ]
            CidrBlock: !GetAtt CidrFindr.CidrBlock3
            MapPublicIpOnLaunch: false
            Tags:
                - Key: Name
                  Value: !Sub SN-${EnvironmentName}-PrivateSubnet-1
                - Key: Tenant
                  Value: !Ref TenantTag
                - Key: SecurityLevel
                  Value: !Ref SecurityLevelTag
                - Key: PointOfContact
                  Value: !Ref POCTag
                - Key: Creator
                  Value: !Ref CreatorTag
                - Key: CostCenter
                  Value: !Ref CostCenterTag

    PrivateSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs ]
            CidrBlock: !GetAtt CidrFindr.CidrBlock4
            MapPublicIpOnLaunch: false
            Tags:
                - Key: Name
                  Value: !Sub SN-${EnvironmentName}-Private-Subnet-2
                - Key: Tenant
                  Value: !Ref TenantTag
                - Key: SecurityLevel
                  Value: !Ref SecurityLevelTag
                - Key: PointOfContact
                  Value: !Ref POCTag
                - Key: Creator
                  Value: !Ref CreatorTag
                - Key: CostCenter
                  Value: !Ref CostCenterTag
    # NAT GATEWAY
    NatGateway1EIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties:
          Domain: vpc

    NatGateway1:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt NatGateway1EIP.AllocationId
            SubnetId: !Ref PublicSubnet1
            Tags:
                - Key: Name
                  Value: !Sub NAT-${EnvironmentName}-NatGateway-1
                - Key: Tenant
                  Value: !Ref TenantTag
                - Key: SecurityLevel
                  Value: !Ref SecurityLevelTag
                - Key: PointOfContact
                  Value: !Ref POCTag
                - Key: Creator
                  Value: !Ref CreatorTag
                - Key: CostCenter
                  Value: !Ref CostCenterTag

    # RouteTables
    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub RT-${EnvironmentName}-PublicRoutes
                - Key: Tenant
                  Value: !Ref TenantTag
                - Key: SecurityLevel
                  Value: !Ref SecurityLevelTag
                - Key: PointOfContact
                  Value: !Ref POCTag
                - Key: Creator
                  Value: !Ref CreatorTag
                - Key: CostCenter
                  Value: !Ref CostCenterTag

    DefaultPublicRoute:
        Type: AWS::EC2::Route
        DependsOn: InternetGatewayAttachment
        Properties:
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway

    PublicSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet1

    PublicSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet2

    PrivateRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub RT-${EnvironmentName}-PrivateRoutes
                - Key: Tenant
                  Value: !Ref TenantTag
                - Key: SecurityLevel
                  Value: !Ref SecurityLevelTag
                - Key: PointOfContact
                  Value: !Ref POCTag
                - Key: Creator
                  Value: !Ref CreatorTag
                - Key: CostCenter
                  Value: !Ref CostCenterTag

    DefaultPrivateRoute1:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway1

    PrivateSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable
            SubnetId: !Ref PrivateSubnet1
    PrivateSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable
            SubnetId: !Ref PrivateSubnet2

    # DHCP Options
    DHCPOptions:
        Type: AWS::EC2::DHCPOptions
        Condition: CreateDHCPOption
        Properties:
            #NtpServers:
            #    - 10.15.0.68
            #    - 10.15.1.68
            DomainName: !Ref DomainName
            DomainNameServers:
              - !Select
                - '0'
                - !GetAtt MSDirectory.DnsIpAddresses
              - !Select
                - '1'
                - !GetAtt MSDirectory.DnsIpAddresses
            Tags:
                - Key: Name
                  Value: !Sub DHCP-${EnvironmentName}-OPT
                - Key: Tenant
                  Value: !Ref TenantTag
                - Key: SecurityLevel
                  Value: !Ref SecurityLevelTag
                - Key: PointOfContact
                  Value: !Ref POCTag
                - Key: Creator
                  Value: !Ref CreatorTag
                - Key: CostCenter
                  Value: !Ref CostCenterTag
    DHCPOptionsAssociation:
        Type: AWS::EC2::VPCDHCPOptionsAssociation
        Condition: DHCPDNSOptionsAssociation
        Properties:
            VpcId: !Ref VPC
            DhcpOptionsId: !Ref DHCPOptions
    # Endpoint
    # VPC Peering Connection and Routes
    VpcPeeringConnection:
        Type: AWS::EC2::VPCPeeringConnection
        Properties:
            VpcId: !Ref VPC
            PeerVpcId: 'vpc-2fa28554'
            PeerOwnerId: '377104928278'
            PeerRoleArn: 'arn:aws:iam::377104928278:role/CSS-CrossAccount-VPCPeering'
            # Above 3 parameters can be found on Workspace VPCs
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-WSpaces
                - Key: Tenant
                  Value: !Ref TenantTag
                - Key: SecurityLevel
                  Value: !Ref SecurityLevelTag
                - Key: PointOfContact
                  Value: !Ref POCTag
                - Key: Creator
                  Value: !Ref CreatorTag
                - Key: CostCenter
                  Value: !Ref CostCenterTag

    VpcPeeringRoutePrivate1:
        Type: AWS::EC2::Route
        Properties:
          DestinationCidrBlock: 10.192.0.0/23
          RouteTableId:
            Ref: PrivateRouteTable
          VpcPeeringConnectionId:
            Ref: VpcPeeringConnection
    # NACL
    NetworkAcl:
        Type: AWS::EC2::NetworkAcl
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub NL-${EnvironmentName}-MAIN
                - Key: Tenant
                  Value: !Ref TenantTag
                - Key: SecurityLevel
                  Value: !Ref SecurityLevelTag
                - Key: PointOfContact
                  Value: !Ref POCTag
                - Key: Creator
                  Value: !Ref CreatorTag
                - Key: CostCenter
                  Value: !Ref CostCenterTag
    NetworkAclEntry0:
      DependsOn: NetworkAcl
      Type: AWS::EC2::NetworkAclEntry
      Properties:
        NetworkAclId: !Ref NetworkAcl
        RuleNumber: 100
        Protocol: '-1'
        RuleAction: allow
        Egress: false
        CidrBlock: 0.0.0.0/0
        PortRange:
          From: 0
          To: 65536
    NetworkAclEntry1:
      DependsOn: NetworkAcl
      Type: AWS::EC2::NetworkAclEntry
      Properties:
        NetworkAclId: !Ref NetworkAcl
        RuleNumber: 100
        Protocol: '-1'
        RuleAction: allow
        Egress: true
        CidrBlock: 0.0.0.0/0
        PortRange:
          From: 0
          To: 65536
    PrivateSubnet1NaclAssociation:
      DependsOn:
        - PrivateSubnet1
        - NetworkAcl
      Type: AWS::EC2::SubnetNetworkAclAssociation
      Properties:
        SubnetId: !Ref PrivateSubnet1
        NetworkAclId: !Ref NetworkAcl
    PrivateSubnet2NaclAssociation:
      DependsOn:
        - PrivateSubnet2
        - NetworkAcl
      Type: AWS::EC2::SubnetNetworkAclAssociation
      Properties:
        SubnetId: !Ref PrivateSubnet2
        NetworkAclId: !Ref NetworkAcl
    PublicSubnet1NaclAssociation:
      DependsOn:
        - PublicSubnet1
        - NetworkAcl
      Type: AWS::EC2::SubnetNetworkAclAssociation
      Properties:
        SubnetId: !Ref PublicSubnet1
        NetworkAclId: !Ref NetworkAcl
    PublicSubnet2NaclAssociation:
      DependsOn:
        - PublicSubnet2
        - NetworkAcl
      Type: AWS::EC2::SubnetNetworkAclAssociation
      Properties:
        SubnetId: !Ref PublicSubnet2
        NetworkAclId: !Ref NetworkAcl
    # S3 Buckets
    S3Bucket:
        Type: AWS::S3::Bucket
        Properties:
            AccessControl: Private
            BucketName: !Sub "css-labenv-${AWS::StackName}"
            #BucketName: !Sub "css-labenv-${EnvironmentName}"
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-S3Bucket
                - Key: Tenant
                  Value: !Ref TenantTag
                - Key: SecurityLevel
                  Value: !Ref SecurityLevelTag
                - Key: PointOfContact
                  Value: !Ref POCTag
                - Key: Creator
                  Value: !Ref CreatorTag
                - Key: CostCenter
                  Value: !Ref CostCenterTag
    # CSS IAM Admin Roles and Cross Accout Okta Role and Policies
    CSSFASADMGlobalManagementRole:
      Type: AWS::IAM::Role
      Properties:
         AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action: 'sts:AssumeRoleWithSAML'
            Principal:
              Federated: !Sub 'arn:aws:iam::${AWS::AccountId}:saml-provider/MultiAcct-Prod'
            Condition:
              StringEquals:
                'SAML:aud': 'https://signin.aws.amazon.com/saml'
         RoleName: !Sub CSS-FAS-ADM-Global-${EnvironmentName}-Management
    CSSIAMGlobalManagementPolicy:
      Type: AWS::IAM::ManagedPolicy
      Properties:
         Description: Global management policy for CSS privileged admin
         ManagedPolicyName: !Sub CSS-IAM-ADM-Global-${EnvironmentName}-Management
         PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: Allow
            Action: "*"
            Resource: "*"
         Roles: [!Ref CSSFASADMGlobalManagementRole]
    CSSOktaIdpCrossAccountRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action: 'sts:AssumeRole'
            Principal:
              AWS:
                - !Sub 'arn:aws:iam::651773320464:user/svcDevIAMOkta'
        RoleName: !Sub Okta-Idp-cross-account-role
    CSSOktaIdpCrossAccountPolicy:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        Description: Okta Read only Policy from the Master account
        ManagedPolicyName: CSS-IAM-ADM-ChildAccountOktaIAM-ReadOnly
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: Allow
            Action:
              - "iam:ListRoles"
              - "iam:ListAccountAliases"
            Resource: "*"
        Roles: [!Ref CSSOktaIdpCrossAccountRole]
    # Read Only account for DivvyCloud Governance tool
    CSSDivvyCloudComplianceRole:
      Type: "AWS::IAM::Role"
      Properties:
         AssumeRolePolicyDocument:
          Statement:
          - Effect: "Allow"
            Principal:
              AWS: arn:aws:iam::441805543767:root
            Action:
            - sts:AssumeRole
         RoleName: CSS-DivvyCloud-Compliance
    CSSIAMADMDivvyCloudReadOnlypolicy:
      Type: "AWS::IAM::ManagedPolicy"
      Properties:
         Description: Read Only account for DivvyCloud Governance tool
         ManagedPolicyName: CSS-IAM-ADM-DivvyCloud-ReadOnly
         PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Action:
            - 'ec2:Describe*'
            - 'ec2:List*'
            - 'ec2:Get*'
            Effect: Allow
            Resource: '*'
          - Action:
            - 'elasticloadbalancing:Describe*'
            - 'elasticloadbalancing:List*'
            - 'elasticloadbalancing:Get*'
            Effect: Allow
            Resource: '*'
          - Action:
            - 'autoscaling:Describe*'
            Effect: Allow
            Resource: '*'
          - Effect: Allow
            Action:
            - 'kms:List*'
            - 'kms:Get*'
            - 'kms:Describe*'
            Resource: '*'
          - Action:
            - 'cloudwatch:Describe*'
            - 'cloudwatch:List*'
            - 'cloudwatch:Get*'
            Effect: Allow
            Resource: '*'
          - Action:
            - 'rds:Describe*'
            - 'rds:List*'
            - 'rds:Get*'
            Effect: Allow
            Resource: '*'
          - Action:
            - 'redshift:Describe*'
            - 'redshift:List*'
            - 'redshift:Get*'
            Effect: Allow
            Resource: '*'
          - Action:
            - 's3:Describe*'
            - 's3:List*'
            - 's3:Get*'
            Effect: Allow
            Resource: '*'
          - Action:
            - 'iam:Describe*'
            - 'iam:List*'
            - 'iam:Get*'
            Effect: Allow
            Resource: '*'
          - Action:
            - 'route53:Describe*'
            - 'route53:List*'
            - 'route53:Get*'
            Effect: Allow
            Resource: '*'
          - Action:
            - 'elasticache:Describe*'
            - 'elasticache:List*'
            - 'elasticache:Get*'
            Effect: Allow
            Resource: '*'
          - Action:
            - 'cloudtrail:Describe*'
            - 'cloudtrail:List*'
            - 'cloudtrail:Get*'
            Effect: Allow
            Resource: '*'
          - Action:
            - 'elasticfilesystem:Describe*'
            Effect: Allow
            Resource: '*'
          - Action:
            - 'es:Describe*'
            - 'es:List*'
            Effect: Allow
            Resource: '*'
          - Action:
            - 'lambda:Get*'
            - 'lambda:List*'
            Effect: Allow
            Resource: '*'
          - Action:
            - 'config:Describe*'
            Effect: Allow
            Resource: '*'
          - Action:
            - 'organizations:List*'
            Effect: Allow
            Resource: '*'
          - Action:
            - 'sts:AssumeRole'
            - 'sts:GetCallerIdentity'
            - 'sts:GetFederationToken'
            - 'sts:GetSessionToken'
            Effect: Allow
            Resource: '*'
          - Action:
            - 'acm:ListCertificates'
            - 'acm:DescribeCertificate'
            - 'acm:ListTagsForCertificate'
            Effect: Allow
            Resource: '*'
          - Action:
            - 'cloudformation:DescribeStacks'
            - 'cloudformation:ListStackResources'
            - 'cloudformation:ListStacks'
            - 'cloudformation:DescribeStackResource'
            - 'cloudformation:DescribeStackResources'
            - 'cloudformation:GetTemplate'
            Effect: Allow
            Resource: '*'
          - Action:
            - 'dynamodb:DescribeTable'
            - 'dynamodb:DescribeGlobalTable'
            - 'dynamodb:ListBackups'
            - 'dynamodb:ListTables'
            - 'dynamodb:ListGlobalTables'
            - 'dynamodb:ListTagsOfResource'
            Effect: Allow
            Resource: '*'
          - Action:
            - 'dax:DescribeClusters'
            - 'dax:DescribeTable'
            - 'dax:ListTables'
            - 'dax:ListTags'
            Effect: Allow
            Resource: '*'
          - Action:
            - 'sqs:GetQueueAttributes'
            - 'sqs:ListQueues'
            - 'sqs:ListQueueTags'
            Effect: Allow
            Resource: '*'
          - Action:
            - 'workspace:DescribeTags'
            - 'workspace:DescribeWorkspaces'
            - 'workspace:DescribeWorkspaceBundles'
            - 'workspace:DescribeWorkspacesConnectionStatus'
            - 'workspace:DescribeWorkspaceDirectories'
            Effect: Allow
            Resource: '*'
         Roles: [!Ref CSSDivvyCloudComplianceRole]
    # DS MSDirectory for DHCP/DNS Options
    MSDirectory:
        Type: AWS::DirectoryService::MicrosoftAD
        Condition: CreateMSAD
        Properties:
          CreateAlias: false
          EnableSso: false
          Name: !Join
            - ''
            - - !Ref EnvironmentName
              - '.'
              - !Ref DomainName
          Password: 'm0nit0rM3'
          ShortName: 'CSSLAB'
          VpcSettings:
            SubnetIds:
                - !Ref 'PrivateSubnet1'
                - !Ref 'PrivateSubnet2'
            VpcId: !Ref 'VPC'
# Outputs
Outputs:
    VPC:
        Description: A reference to the created VPC
        Value: !Ref VPC

    PublicSubnets:
        Description: A list of the public subnets
        Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]

    PrivateSubnets:
        Description: A list of the private subnets
        Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]

    PublicSubnet1:
        Description: A reference to the public subnet in the 1st Availability Zone
        Value: !Ref PublicSubnet1

    PublicSubnet2:
        Description: A reference to the public subnet in the 2nd Availability Zone
        Value: !Ref PublicSubnet2

    PrivateSubnet1:
        Description: A reference to the private subnet in the 1st Availability Zone
        Value: !Ref PrivateSubnet1

    PrivateSubnet2:
        Description: A reference to the private subnet in the 2nd Availability Zone
        Value: !Ref PrivateSubnet2
#    S3BucketName:
#        Description: A reference to the S3BucketName
#        Value: !Ref S3BucketName
